from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from keyboards.inline.callback_data import message_callback, event_data, start_new_game, update_tokens_callback
from keyboards.inline.callback_data import start_edit_callback


async def create_oponent_markup(balance, seconds):

    markup = InlineKeyboardMarkup(
        inline_keyboard=[

            [

                # InlineKeyboardButton(
                #     text=u'üôÇ', callback_data=message_callback.new(type='message', text='positive')),
                # InlineKeyboardButton(
                #     text=u'üò∂', callback_data=message_callback.new(type='message', text='netral')),
                # InlineKeyboardButton(
                #     text=u'üôÅ', callback_data=message_callback.new(type='message', text='negative'))\
                InlineKeyboardButton(
                    text=u'üôÇ', callback_data=message_callback.new(type='message', text='positive')),

                InlineKeyboardButton(
                    text=u'üôÅ', callback_data=message_callback.new(type='message', text='negative'))

            ],
            [
                InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—É',
                                     callback_data=message_callback.new(type='message', text='message_opponent')),
                InlineKeyboardButton(
                    text=u'üò∂', callback_data=message_callback.new(type='message', text='neutral')),
            ],


            [InlineKeyboardButton(
                text=f'–∏—Ç–æ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ: {balance}', callback_data='balance'),
             ],
            [InlineKeyboardButton(
                text='–∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ç–µ–∫—É—à–µ–≥–æ —Ö–æ–¥–∞: 10', callback_data='money-10')
             ],
            [
                InlineKeyboardButton(
                    text='—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å - keep', callback_data=event_data.new(choose='keep')),
                InlineKeyboardButton(
                    text='–ø–æ–¥–µ–ª–∏—Ç—å—Å—è - share', callback_data=event_data.new(choose='share'))
            ],
            # [
            #     InlineKeyboardButton(text=seconds, callback_data='timer')
            # ],


            # [
            #     InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –æ–ø–ø–æ–Ω–µ–Ω—Ç—É',
            #                          callback_data=message_callback.new(type='message', text='message_opponent'))
            # ]
        ])

    return markup


async def create_oponent_markup_second(balance, tokens, seconds):

    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [

                # InlineKeyboardButton(
                #     text=u'üôÇ', callback_data=message_callback.new(type='message', text='positive')),
                # InlineKeyboardButton(
                #     text=u'üò∂', callback_data=message_callback.new(type='message', text='netral')),
                # InlineKeyboardButton(
                #     text=u'üôÅ', callback_data=message_callback.new(type='message', text='negative'))\
                InlineKeyboardButton(
                    text=u'üôÇ', callback_data=message_callback.new(type='message', text='positive')),
                InlineKeyboardButton(
                    text=u'üôÅ', callback_data=message_callback.new(type='message', text='negative'))
            ],
            [
                InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—É',
                                     callback_data=message_callback.new(type='message', text='message_opponent')),
                InlineKeyboardButton(
                    text=u'üò∂', callback_data=message_callback.new(type='message', text='neutral'))
            ],


            [InlineKeyboardButton(
                text=f'–∏—Ç–æ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ: {balance}', callback_data='balance'),
             ],
            [InlineKeyboardButton(
                text=f'–∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ç–µ–∫—É—à–µ–≥–æ —Ö–æ–¥–∞: {tokens}', callback_data='money-10')
             ],
            [

                InlineKeyboardButton(
                    text='-1', callback_data=update_tokens_callback.new(event='minus_1')),
                InlineKeyboardButton(
                    text='+1', callback_data=update_tokens_callback.new(event='plus_1')),
                InlineKeyboardButton(
                    text='+10', callback_data=update_tokens_callback.new(event='plus_10')),
                InlineKeyboardButton(
                    text='+20', callback_data=update_tokens_callback.new(event='plus_20')),
                InlineKeyboardButton(
                    text='+50', callback_data=update_tokens_callback.new(event='plus_50')),
            ],
            [
                InlineKeyboardButton(
                    text='—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å - keep', callback_data=event_data.new(choose='keep')),
                InlineKeyboardButton(
                    text='–ø–æ–¥–µ–ª–∏—Ç—å—Å—è - share', callback_data=event_data.new(choose='share'))
            ],



        ])

    return markup

new_session = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='–Ω–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Å–µ—Å—Å–∏—é', callback_data=start_edit_callback.new(start='yes'))
         ]
    ])


new_game = InlineKeyboardMarkup(row_width=2, inline_keyboard=[
    [
        InlineKeyboardButton(
            text='–ù–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∏–≥—Ä—É', callback_data=start_new_game.new(start='new_game')),
    #         InlineKeyboardButton(
    #         text='–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', callback_data=start_edit_callback.new(start='no'))
    ]
])
